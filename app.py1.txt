from flask import Flask, request, jsonify
import pickle
import numpy as np

# Initialize Flask app
app = Flask(__name__)

# Load the TF-IDF vectorizer, scaler, and model
with open('tfidf_vectorizer.pkl', 'rb') as vectorizer_file:
    tfidf_vectorizer = pickle.load(vectorizer_file)

with open('scaler.pkl', 'rb') as scaler_file:
    scaler = pickle.load(scaler_file)

with open('logistic_regression_model.pkl', 'rb') as model_file:
    model = pickle.load(model_file)

@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Parse input text and optional numeric features
        data = request.json
        text = data['text']  # Input text
        numeric_features = np.array(data['numeric_features']).reshape(1, -1)

        # Transform text using TF-IDF vectorizer
        text_features = tfidf_vectorizer.transform([text])

        # Combine text features with numeric features (if needed)
        combined_features = np.hstack([text_features.toarray(), numeric_features])

        # Scale the combined features
        scaled_features = scaler.transform(combined_features)

        # Predict using the logistic regression model
        prediction = model.predict(scaled_features).tolist()

        # Respond with the prediction
        return jsonify({'prediction': prediction})
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    app.run(debug=True)
